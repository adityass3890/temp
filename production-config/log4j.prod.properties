# Production Log4j Configuration for DLM Migration
# Copy this file to $SPARK_HOME/conf/log4j.properties

# Root logger configuration - production level logging
log4j.rootCategory=INFO, console, file

# Console appender for immediate feedback
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{1}: %m%n

# File appender for persistent logging
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=/app/tetra/DLM/logs/spark-application.log
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{1}: %m%n

# Error file appender for errors and warnings
log4j.appender.error=org.apache.log4j.FileAppender
log4j.appender.error.File=/app/tetra/DLM/logs/spark-errors.log
log4j.appender.error.Threshold=WARN
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c{1}: %m%n

# Migration-specific logger
log4j.logger.com.tmobile=INFO, migration
log4j.appender.migration=org.apache.log4j.DailyRollingFileAppender
log4j.appender.migration.File=/app/tetra/DLM/logs/migration.log
log4j.appender.migration.DatePattern='.'yyyy-MM-dd
log4j.appender.migration.layout=org.apache.log4j.PatternLayout
log4j.appender.migration.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %p %c{2}: %m%n

# Set the default spark-shell log level to WARN
log4j.logger.org.apache.spark.repl.Main=WARN

# Reduce verbosity of third-party libraries
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=WARN
log4j.logger.parquet=WARN

# Cassandra connector logging
log4j.logger.com.datastax.driver=WARN
log4j.logger.com.datastax.spark=INFO

# Oracle JDBC logging
log4j.logger.oracle.jdbc=WARN

# Hadoop and YARN logging
log4j.logger.org.apache.hadoop=WARN
log4j.logger.org.apache.hadoop.yarn=WARN

# Suppress annoying hive metastore messages
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

# Security and audit logging
log4j.logger.SecurityLogger=INFO, security
log4j.appender.security=org.apache.log4j.DailyRollingFileAppender
log4j.appender.security.File=/app/tetra/DLM/logs/security.log
log4j.appender.security.DatePattern='.'yyyy-MM-dd
log4j.appender.security.layout=org.apache.log4j.PatternLayout
log4j.appender.security.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p: %m%n

# Performance logging for monitoring
log4j.logger.Performance=DEBUG, performance
log4j.appender.performance=org.apache.log4j.DailyRollingFileAppender
log4j.appender.performance.File=/app/tetra/DLM/logs/performance.log
log4j.appender.performance.DatePattern='.'yyyy-MM-dd
log4j.appender.performance.layout=org.apache.log4j.PatternLayout
log4j.appender.performance.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %m%n

# SQL execution logging for debugging
log4j.logger.org.apache.spark.sql.execution.streaming=INFO
log4j.logger.org.apache.spark.sql.catalyst.optimizer=WARN
log4j.logger.org.apache.spark.sql.catalyst.parser=WARN

# Network and RPC logging
log4j.logger.org.apache.spark.network=WARN
log4j.logger.org.apache.spark.rpc=WARN

# Memory and storage logging
log4j.logger.org.apache.spark.storage=INFO
log4j.logger.org.apache.spark.scheduler=INFO